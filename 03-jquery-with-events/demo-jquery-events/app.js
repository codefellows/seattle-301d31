'use strict';
// DOM-ready function
$(document).ready(function() {
  $('.tab-content').hide(100000);
})

// Event handler for the main nav
$('nav a').on('click', function() {
  let $whereToGo = $(this).data('tab');
  // console.log($whereToGo);
  // This gives us 'Delegation/Data' or 'Attributes/Props'
  // console.log('$where to go', $whereToGo);
  $('.tab-content').hide();
  // Reminder about the debugger statement! Comment it in and see what happens!
  // debugger;
  $(`#${$whereToGo}`).fadeIn(750);
})

// Event logger
function logTarget() {
  // Compare the difference between these two console logs
  console.log('this', this); // vanilla element
  // console.log('$(this)', $(this)); // jQuery object

  let $target = $(this).text();
  let $newFeedback = $('#feedback p:first-child').clone();

  $newFeedback.text(`You clicked on ${$target}`);
  $('#feedback').append($newFeedback);
}

// NOT delegated = event bound to the li elements...
// ...but only those that exist in the DOM on page load.
// NOT the ones that are dynamically generated by clicking on the button
// No selector specified in .on() method
$('#menu1 li').on('click', logTarget)

// Delegated = event is bound to parent element
// 'li' is specified in .on()
// This will hear events on dynamically generated elements matching the selector
$('#menu2').on('click', 'li', logTarget)

// Button handler for menu1
$('button[name=adder1]').on('click', function() {
  let $newLi1 = $('#menu1 li:first').clone();
  $newLi1.text('newLi1');
  $('#menu1').append($newLi1);
});

// Button handler for menu2
$('button[name=adder2]').on('click', function() {
  let $newLi2 = $('#menu2 li:first').clone();
  $newLi2.text('newLi2');
  $('#menu2').append($newLi2);
});

$('button[name=clear]').on('click', function() {
  $('.log-item:first').siblings().remove();
});

// Checkbox handler = change event.
// This shows difference between attr & prop
$('input[name=check]').on('change', function() {
  let $checkbox = $(this);

  // $('#checked-state').html('.attr("checked"): ' + $checkbox.attr('checked') + '<br>.prop( "checked" ): ' + $checkbox.prop('checked'));
  $('#checked-state').html(`.attr("checked"): ${$checkbox.attr('checked')}<br>.prop( "checked" ):${$checkbox.prop('checked')}`);

}).change();

// Select box filtering
$('select[name="icecream"]').on('change', function() {
  let $selection = $(this).val();
  $('img').hide();
  debugger;
  $(`img[data-flavor=${$selection}]`).show();
})